- name: Deploy Terraform IaC
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Apply terraform project
      community.general.terraform:
        # binary_path: /usr/bin/tofu
        project_path: "./terraform/"
        workspace: default
        provider_upgrade: true
        check_destroy: true
        state: present

    # NOTE: Reload inventory with any new hosts
    - name: Refresh Inventory
      ansible.builtin.meta: refresh_inventory

- name: Wait for Hosts
  hosts: all
  gather_facts: false
  tasks:
    - name: Wait for the Host to Become Reachable
      ansible.builtin.wait_for_connection:
        timeout: 300  # Maximum time to wait in seconds (5 minutes)
        delay: 5      # Initial delay before starting checks
        sleep: 5      # Time between connection attempts

- name: Prepare Hosts
  become: true
  gather_facts: false
  hosts: all
  tasks:
    - name: Create Ansible Working Directory
      ansible.builtin.file:
        path: "{{ ansible_working_dir }}"
        mode: "0644"
        state: directory
    - name: Create Directory for Storing State
      ansible.builtin.file:
        path: "{{ ansible_state_dir }}"
        mode: "0644"
        state: directory

- name: Update Hosts Packages
  become: true
  hosts: all
  handlers:
    - name: Add Last Update Timestamp
      ansible.builtin.file:
        path: "{{ ansible_state_dir }}/last_update"
        mode: "0644"
        state: touch
  tasks:
    - name: Update All Packages
      when: perform_updates | bool
      block:
        - name: Update APT Systems
          notify: Add Last Update Timestamp
          ansible.builtin.apt:
            package: "*"
            update_cache: true
            autoremove: true
            autoclean: true
            state: latest
          when: ansible_os_family == 'Debian'
        - name: Update DNF Systems
          notify: Add Last Update Timestamp
          ansible.builtin.dnf:
            name: "*"
            state: latest
          when: ansible_os_family == 'RedHat'

- name: Harden Hosts
  hosts: harden
  become: true
  handlers:
    - name: Create Hardening Timestamp
      ansible.builtin.file:
        path: "{{ ansible_state_dir }}/hardened"
        mode: "0644"
        state: touch
  tasks:
    - name: Check if the host has been hardened already
      ansible.builtin.stat:
        path: "{{ ansible_state_dir }}/hardened"
      register: hardened

    - name: Apply CIS Remidiation to Ubuntu-24.* Hosts
      when:
        - ansible_distribution == "Ubuntu"
        - ansible_distribution_major_version is version(24)
        - not hardened.stat.exists
        # NOTE: To run hardening on a schedule (weekly)
        # - (ansible_date_time.epoch | int) - (last_time_hardened.stat.mtime | int) > 604800
      notify: Create Hardening Timestamp
      block:
        - name: Run Ansible Lockdown
          ansible.builtin.import_role:
            name: ansible-lockdown.ubuntu24_cis
          vars:
            setup_audit: true
            run_audit: true
            # NOTE: 2025-03-28 - Setting the vars at a host level wasn't working
            # tried both `import_role` and `include_role`
            ubtu24cis_rule_5_2_4: false # Allow accounts with login shell to be locked
            ubtu24cis_rule_5_4_2_4: false # Don't require root password to be set

- name: Install Docker
  hosts: docker
  become: true
  roles:
    - syaghoubi00-docker
