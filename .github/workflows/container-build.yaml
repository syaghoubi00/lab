name: Container Build

on:
  workflow_call:
    inputs:
      platforms:
        required: true
        type: string
      # slsa-provenance:
      #   required: true
      #   type: string
    outputs:
      build-status:
        description: "Status of container builds"
        value: ${{ jobs.build.outputs.build-status }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJson(inputs.platforms) }}
    permissions:
      contents: read
      packages: write
      # id-token: write
    outputs:
      # provenance-paths: ${{ steps.provenance.outputs.paths }}
      build-status: ${{ steps.build-containers.outputs.build-status }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1

      - name: Install SLSA tooling
        uses: slsa-framework/slsa-github-generator/actions/installer@v1.9.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ matrix.platform }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Find Containerfiles
        id: containerfiles
        uses: .github/actions/find-containerfiles

      - name: Build and Sign Containers
        uses: docker/bake-action@v4
        with:
          files: ${{ steps.containerfiles.outputs.bake-file }}
          push: true
          set: |
            *.platform=${{ matrix.platform }}
            *.cache-from=type=local,src=/tmp/.buildx-cache
            *.cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max
            *.provenance=mode=max
            *.attestation-type=slsa
            *.registry=ghcr.io
            *.repository=${{ github.repository_owner }}
