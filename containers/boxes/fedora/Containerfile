FROM registry.fedoraproject.org/fedora:42

LABEL com.github.containers.toolbox="true"
LABEL org.opencontainers.image.description="Development Toolbox"

# Add dnf conf, since default doesnt install manpages
COPY etc/dnf/dnf.conf /etc/dnf/dnf.conf
RUN dnf install -y \
  ImageMagick-7.1.1.46 \
  ansible-11.3.0 \
  bash-completion-2.16 \
  bat-0.25.0 \
  bind-utils-9.18.35 \
  cargo-1.86.0 \
  cloud-utils-0.33 \
  fd-find-10.1.0 \
  flatpak-spawn-1.0.6 \
  fzf-0.61.1 \
  golang-1.24.2 \
  gcc-15.0.1 \
  gcc-c++-15.0.1 \
  git-2.49.0 \
  htop-3.3.0 \
  iperf3-3.18 \
  ipmitool-1.8.19 \
  iputils-20240905 \
  jq-1.7.1 \
  python3-pip \
  libicu-76.1 \
  lm_sensors-3.6.0 \
  man-db-2.13.0 \
  man-pages-6.9.1 \
  ncdu-2.7 \
  neovim-0.11.0 \
  netcat-1.229 \
  opentofu-1.9.0 \
  perl-Image-ExifTool-13.10 \
  pgp-tools-2.10 \
  poetry-1.8.5 \
  python3-neovim-0.5.2 \
  ripgrep-14.1.1 \
  rust-1.86.0 \
  tmux-3.5a \
  tree-2.2.1 \
  unzip-6.0 \
  usbutils-018 \
  xorriso-1.5.6 \
  yq-4.43.1 \
  zoxide-0.9.4 \
  glibc-langpack-en \
  uv-0.6.5 \
  && dnf clean all

# Inatall gh-cli
# NOTE: Use unpinned version, since pinup doesn't add external repos
RUN dnf install -y dnf5-plugins && \
  dnf config-manager addrepo --from-repofile=https://cli.github.com/packages/rpm/gh-cli.repo && \
  dnf install -y gh --repo gh-cli && \
  dnf clean all

# Install Azure CLI
RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc && \
  dnf install -y https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm && \
  dnf install -y azure-cli && dnf clean all

# Install HCP CLI and Terraform
# NOTE: 2025-04-19 - RPM repo is not available for Fedora 42, so we need to add the old F41 repao manually
# RUN dnf config-manager addrepo --from-repofile=https://rpm.releases.hashicorp.com/fedora/hashicorp.repo && \
RUN cat <<EOF > /etc/yum.repos.d/hashicorp.repo
[hashicorp]
name=Hashicorp Stable - 41
baseurl=https://rpm.releases.hashicorp.com/fedora/41/x86_64/stable
enabled=1
gpgcheck=1
gpgkey=https://rpm.releases.hashicorp.com/gpg
EOF

RUN dnf install -y hcp terraform && dnf clean all

# Tmp dir for binaries
RUN mkdir /tmp/bin/
# Hugo
RUN hugo_latest_version="$(wget -qO- https://api.github.com/repos/gohugoio/hugo/releases/latest | jq -r '.tag_name' | cut -c 2-)"; wget -qO /tmp/hugo https://github.com/gohugoio/hugo/releases/latest/download/hugo_extended_${hugo_latest_version}_linux-amd64.tar.gz && \
  tar xzvf /tmp/hugo -C /tmp/bin/ hugo && rm /tmp/hugo
# Docker-compose
RUN wget -qO /tmp/bin/docker-compose https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64

# Kubectl
WORKDIR /tmp/bin
RUN wget -qO /tmp/bin/kubectl "https://dl.k8s.io/release/$(wget -qO- https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
  echo "$(wget -qO- "https://dl.k8s.io/release/$(wget -qO- https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256") kubectl" | sha256sum --check && \
  install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# Cleanup tmp
RUN chmod +x /tmp/bin/* && mv /tmp/bin/* /bin && rmdir /tmp/bin/

# Script for running host commands from within the container
COPY host-cmd.sh /usr/bin/host-cmd
# Link podman to host-cmd to pass `podman` commands to host
RUN ln -s /usr/bin/host-cmd /usr/bin/podman

USER toolbox

HEALTHCHECK NONE
