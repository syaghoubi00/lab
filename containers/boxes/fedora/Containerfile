FROM registry.fedoraproject.org/fedora:42

LABEL com.github.containers.toolbox="true"
LABEL org.opencontainers.image.description="Development Toolbox"

# Add dnf conf, since default doesnt install manpages
COPY etc/dnf/dnf.conf /etc/dnf/dnf.conf
RUN dnf install -y \
  ImageMagick \
  ansible \
  bash-completion \
  bat \
  bind-utils \
  cargo \
  cloud-utils \
  fd-find \
  flatpak-spawn \
  fzf \
  golang \
  gcc \
  gcc-c++ \
  git \
  htop \
  iperf3 \
  ipmitool \
  iputils \
  jq \
  python3-pip \
  libicu \
  lm_sensors \
  man-db \
  man-pages \
  ncdu \
  neovim \
  netcat \
  opentofu \
  perl-Image-ExifTool \
  pgp-tools \
  poetry \
  python3-neovim \
  ripgrep \
  rust \
  tmux \
  tree \
  unzip \
  usbutils \
  xorriso \
  yq \
  zoxide \
  glibc-langpack-en \
  uv \
  && dnf clean all

# Inatall gh-cli
# NOTE: Use unpinned version, since pinup doesn't add external repos
RUN dnf install -y dnf5-plugins && \
  dnf config-manager addrepo --from-repofile=https://cli.github.com/packages/rpm/gh-cli.repo && \
  dnf install -y gh --repo gh-cli && \
  dnf clean all

# Install Azure CLI
RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc && \
  dnf install -y https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm && \
  dnf install -y azure-cli && dnf clean all

# Install HCP CLI and Terraform
RUN dnf config-manager addrepo --from-repofile=https://rpm.releases.hashicorp.com/fedora/hashicorp.repo && \
  dnf install -y hcp terraform && dnf clean all

# Tmp dir for binaries
RUN mkdir /tmp/bin/
# Hugo
RUN hugo_latest_version="$(wget -qO- https://api.github.com/repos/gohugoio/hugo/releases/latest | jq -r '.tag_name' | cut -c 2-)"; wget -qO /tmp/hugo https://github.com/gohugoio/hugo/releases/latest/download/hugo_extended_${hugo_latest_version}_linux-amd64.tar.gz && \
  tar xzvf /tmp/hugo -C /tmp/bin/ hugo && rm /tmp/hugo
# Docker-compose
RUN wget -qO /tmp/bin/docker-compose https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64

# Kubectl
WORKDIR /tmp/bin
RUN wget -qO /tmp/bin/kubectl "https://dl.k8s.io/release/$(wget -qO- https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
  echo "$(wget -qO- "https://dl.k8s.io/release/$(wget -qO- https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256") kubectl" | sha256sum --check && \
  install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# Cleanup tmp
RUN chmod +x /tmp/bin/* && mv /tmp/bin/* /bin && rmdir /tmp/bin/

# Script for running host commands from within the container
COPY host-cmd.sh /usr/bin/host-cmd
# Link podman to host-cmd to pass `podman` commands to host
RUN ln -s /usr/bin/host-cmd /usr/bin/podman

USER toolbox

HEALTHCHECK NONE
